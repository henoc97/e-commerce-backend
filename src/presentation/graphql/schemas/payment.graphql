"""
Represents a payment in the system.
"""
type Payment {
  """
  Unique identifier for the Payment.
  """
  id: ID

  """
  Unique identifier for the Order associated with this payment.
  """
  orderId: ID

  """
  The method used for the payment (e.g., Stripe, PayPal, Bank Transfer).
  """
  method: String!

  """
  The status of the payment (e.g., SUCCESS, FAILED, PENDING).
  """
  status: PaymentStatus!

  """
  The amount of money that was paid.
  """
  amount: Float!

  """
  The currency of the payment.
  """
  currency: Currency!

  """
  The date and time when the payment was created.
  """
  createdAt: String
}

"""
Enum for payment statuses.
"""
enum PaymentStatus {
  SUCCESS
  FAILED
  PENDING
}

"""
Enum for currencies.
"""
enum Currency {
  USD
  EUR
}

"""
Queries related to Payments.
"""
type Query {
  """
  Fetches the most recent payment by order ID.
  """
  fetchMostRecentPaymentByOrderId(orderId: Int!): Payment

  """
  Fetches a payment by its ID.
  """
  fetchPaymentById(id: Int!): Payment

  """
  Fetches payments within a specified date range.
  """
  fetchPaymentsByDateRange(startDate: String!, endDate: String!): [Payment!]!

  """
  Fetches payments by payment method.
  """
  fetchPaymentsByMethod(method: String!): [Payment!]!

  """
  Fetches payments by order ID.
  """
  fetchPaymentsByOrderId(orderId: Int!): [Payment!]!

  """
  Fetches payments by status.
  """
  fetchPaymentsByStatus(status: PaymentStatus!): [Payment!]!

  """
  Fetches payments grouped by method.
  """
  fetchPaymentsGroupedByMethod: [Payment!]!

  """
  Fetches the total amount of payments within a specified date range.
  """
  fetchTotalAmountByDateRange(startDate: String!, endDate: String!): Float!
}

"""
Mutations related to Payments.
"""
type Mutation {
  """
  Creates a new payment.
  """
  createPayment(paymentDTO: PaymentInput!): Payment!

  """
  Deletes a payment by its ID.
  """
  deletePayment(id: Int!): Boolean!

  """
  Updates an existing payment.
  """
  updatePayment(id: Int!, updates: PaymentInput!): Payment
}

"""
Input type for creating or updating a payment.
"""
input PaymentInput {
  orderId: Int!
  method: String!
  status: PaymentStatus!
  amount: Float!
  providerId: String
  metadata: JSON
  currency: Currency!
}
