# user.graphql

"""
Represents a user in the system.
"""
type User {
  """
  Unique identifier for the user.
  """
  id: ID!

  """
  Email address of the user.
  """
  email: String!

  """
  Password for the user account (typically not exposed).
  """
  password: String!

  """
  Optional name of the user.
  """
  name: String

  """
  Role of the user (e.g., CLIENT, ADMIN).
  """
  role: UserRole!

  """
  Profile associated with the user.
  """
  profile: UserProfile!

  """
  List of addresses associated with the user.
  """
  addresses: [Address!]!

  """
  List of orders placed by the user.
  """
  orders: [Order!]!

  """
  Date when the user was created.
  """
  createdAt: String!

  """
  Date when the user was last updated.
  """
  updatedAt: String!

  """
  Vendor information if the user is a vendor.
  """
  vendor: Vendor

  """
  List of carts associated with the user.
  """
  cart: [Cart!]!

  """
  Optional list of reviews written by the user.
  """
  reviews: [Review!]

  """
  Optional list of notifications for the user.
  """
  notification: [Notification!]

  """
  Optional list of support tickets raised by the user.
  """
  ticket: [Ticket!]

  """
  Optional list of sub-sites associated with the user.
  """
  subSite: [SubSite!]

  """
  Optional list of user activities.
  """
  userActivity: [UserActivity!]

  """
  Optional list of audit logs for the user.
  """
  auditLog: [AuditLog!]
}

"""
Queries related to Users.
"""
type Query {
  """
  Retrieves a list of all users.
  """
  users: [User!]!

  """
  Retrieves a single user by their ID.
  """
  user(id: ID!): User

  """
  Retrieves a list of users by their role.
  """
  usersByRole(role: UserRole!): [User!]!

  """
  Retrieves users with a specific profile field.
  """
  usersByProfileField(field: String!, value: String!): [User!]!

  """
  Retrieves a list of users with pagination.
  """
  paginatedUsers(page: Int!, limit: Int!): [User!]!
}

"""
Mutations related to Users.
"""
type Mutation {
  """
  Creates a new user.
  """
  createUser(
    email: String!
    password: String!
    name: String
    role: UserRole!
    profileId: ID!
    addresses: [ID!]!
    orders: [ID!]!
    vendorId: ID
    cart: [ID!]!
    reviews: [ID!]
    notification: [ID!]
    ticket: [ID!]
    subSite: [ID!]
    userActivity: [ID!]
    auditLog: [ID!]
  ): User!

  """
  Updates an existing user.
  """
  updateUser(
    id: ID!
    email: String
    password: String
    name: String
    role: UserRole
    profileId: ID
    addresses: [ID!]
    orders: [ID!]
    vendorId: ID
    cart: [ID!]
    reviews: [ID!]
    notification: [ID!]
    ticket: [ID!]
    subSite: [ID!]
    userActivity: [ID!]
    auditLog: [ID!]
  ): User!

  """
  Deletes a user by their ID.
  """
  deleteUser(id: ID!): Boolean!

  """
  Updates the email of an existing user.
  """
  updateUserEmail(id: ID!, email: String!): User!

  """
  Updates the password of an existing user.
  """
  updateUserPassword(id: ID!, password: String!): User!

  """
  Updates the role of an existing user.
  """
  updateUserRole(id: ID!, role: UserRole!): User!

  """
  Adds an address to a user's profile.
  """
  addAddressToUser(id: ID!, addressId: ID!): User!

  """
  Removes an address from a user's profile.
  """
  removeAddressFromUser(id: ID!, addressId: ID!): User!

  """
  Adds an order to a user's profile.
  """
  addOrderToUser(id: ID!, orderId: ID!): User!

  """
  Removes an order from a user's profile.
  """
  removeOrderFromUser(id: ID!, orderId: ID!): User!
}
