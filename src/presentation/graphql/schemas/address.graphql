"""
Represents an Address associated with a User.
"""
type Address {
  """
  Unique identifier for the address.
  """
  id: Int!

  """
  Foreign key referring to the User who owns this address.
  """
  userId: Int!

  """
  The User object associated with this address.
  """
  user: User

  """
  Street address.
  """
  street: String!

  """
  City where the address is located.
  """
  city: String!

  """
  State or region where the address is located.
  """
  state: String!

  """
  Postal code for the address.
  """
  postalCode: String!

  """
  Country where the address is located.
  """
  country: String!
}

"""
Queries for Address.
"""
type Query {
  """
  Get an address by its unique identifier.
  """
  address(id: Int!): Address

  """
  List all addresses.
  """
  addresses: [Address!]!

  """
  List addresses filtered by city.
  """
  addressesByCity(city: String!): [Address!]!

  """
  List addresses for a specific user.
  """
  addressesByUser(userId: Int!): [Address!]!

  """
  Get a paginated list of addresses.
  """
  paginatedAddresses(page: Int!, limit: Int!): [Address!]!

  """
  Get the total number of addresses.
  """
  totalAddresses: Int!
}


"""
Mutations for Address.
"""
type Mutation {
  """
  Create a new address.
  """
  createAddress(
    userId: Int!
    street: String!
    city: String!
    state: String!
    postalCode: String!
    country: String!
  ): Address!

  """
  Update an existing address.
  """
  updateAddress(
    id: Int!
    street: String
    city: String
    state: String
    postalCode: String
    country: String
  ): Address

  """
  Delete an address by its unique identifier.
  """
  deleteAddress(id: Int!): Boolean!
}

"""
Input type for creating or updating an address.
"""
input AddressInput {
  userId: Int!
  street: String!
  city: String!
  state: String!
  postalCode: String!
  country: String!
}
