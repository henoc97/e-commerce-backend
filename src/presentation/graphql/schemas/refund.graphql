# refund.graphql

"""
Represents a refund associated with an order.
"""
type Refund {
  """
  Unique identifier for the refund.
  """
  id: ID!

  """
  Unique identifier for the associated order.
  """
  orderId: ID!

  """
  The order associated with this refund.
  """
  order: Order!

  """
  Reason for the refund.
  Provides the justification or cause for the refund request.
  """
  reason: String!

  """
  Amount of money to be refunded.
  Represents the total amount to be returned to the customer.
  """
  amount: Float!

  """
  Current status of the refund.
  Indicates whether the refund is pending, completed, or rejected.
  """
  status: RefundStatus!

  """
  The date and time when the refund was created.
  Automatically set to the current date and time when the refund is created.
  """
  createdAt: String!
}

"""
Enum representing different refund statuses.
"""
enum RefundStatus {
  PENDING
  COMPLETED
  REJECTED
}

"""
Queries related to Refunds.
"""
type Query {
  """
  Retrieves a list of all refunds.
  """
  refunds: [Refund!]!

  """
  Retrieves a single refund by its ID.
  """
  refund(id: ID!): Refund

  """
  Retrieves refunds for a specific order by its ID.
  """
  refundsByOrder(orderId: ID!): [Refund!]!
}

"""
Mutations related to Refunds.
"""
type Mutation {
  """
  Creates a new refund.
  """
  createRefund(
    input: RefundInput!
  ): Refund!

  """
  Updates an existing refund by its ID.
  """
  updateRefund(
    id: ID!
    reason: String
    amount: Float
    status: RefundStatus
  ): Refund!

  """
  Deletes a refund by its ID.
  """
  deleteRefund(id: ID!): Boolean!
}

"""
Input type for creating and updating Refunds.
"""
input RefundInput {
  """
  Unique identifier for the associated order.
  """
  orderId: ID!

  """
  Reason for the refund.
  """
  reason: String!

  """
  Amount of money to be refunded.
  """
  amount: Float!

  """
  Current status of the refund.
  """
  status: RefundStatus!
}
